[tool.poetry]
name = "legos"
version = "0.1.0"
description = ""
authors = ["rpalshetkar <ratnadeep.palshetkar@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12.4"
pandas = "^2.2.2"
jinja2 = "^3.1.4"
numpy = "^2.0.0"
matplotlib = "^3.9.1"
seaborn = "^0.13.2"
faker = "^26.0.0"
number-parser = "^0.3.2"
icecream = "^2.1.3"
inflection = "^0.5.1"
stringcase = "^1.2.0"
spacy = "^3.7.5"
pyyaml = "^6.0.1"
plotly = "^5.22.0"


pytest = "^8.3.2"
pre-commit = "^3.7.1"

mypy = "^1.11.1"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
  "F", # pyflakes
  "E", "W", # pycodestyle
  "YTT", # flake8-2020
  "B", # flake8-bugbear
  "Q", # flake8-quotes
  "T10", # flake8-debugger
  "INT", # flake8-gettext
  "PL", # pylint
  "PT", # flake8-pytest-style
  "PIE", # misc lints
  "PYI", # flake8-pyi
  "TID", # tidy imports
  "ISC", # implicit string concatenation
  "TCH", # type-checking imports
  "C4", # comprehensions
  "PGH", # pygrep-hooks
  "RUF", # Ruff-specific rules
  "S102", # flake8-bandit: exec-builtin
  "NPY002", # numpy-legacy-random
  "PERF", "FLY", # Perflint
  "G", "FA", # flake8-future-annotations
  "ICN001", # unconventional-import-alias
  "SLOT", # flake8-slots
  "RSE" # flake8-raise
]

ignore = [
    "B905",  # zip strict=True; remove once python <3.10 support is dropped.
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D401",
    "E402",
    "E501",
    "F401",
    "PLR0913",
    "TRY003",  # Avoid specifying messages outside exception class; overly strict, especially for ValueError
]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "chr",
    "typer.Argument",
    "typer.Option"
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pep8-naming]
staticmethod-decorators = ["pydantic.validator", "pydantic.root_validator"]


[tool.codespell]
skip = 'poetry.lock,'


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = false
disable_error_code = ["arg-type"]
exclude = [
    '*.toml$'
]

[[tool.mypy.overrides]]
module = "src.ds"
strict = true
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = false
strict_optional = true
warn_return_any = true
warn_unused_ignores = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "pandas.*"
ignore_missing_imports = true
check_untyped_defs = false
disallow_untyped_defs = false


[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v -ra -q"
pythonpath = "src"